# This is a basic workflow to help you get started with Actions

name: Build ext-sighthound-analytics-webapp

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      dockerTagVersion:
        description: 'Docker tag version to use'
        required: true
        default: 'latest'
      isProduction:
        description: "Is this a production release?"
        type: boolean
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create tag
        uses: actions/github-script@v3
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ github.event.inputs.versionTag }}",
              sha: context.sha
            })

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: GCR bai-test Login
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_BAI_KEY_JSON_RW }}

      - uses: actions/checkout@v2
        with:
          lfs: true
          submodules: false
          fetch-depth: 0

    - name: Docker GCR Setup
      if: ( github.event.inputs.isProduction != 'true' ) 
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_TEST_BAI_KEY_JSON }}
        logout: false

    - name: Docker GCR Setup (Release)
      id: docker_release
      if: ( github.event.inputs.isProduction == 'true' ) 
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_BAI_KEY_JSON_RW }}

    - name: Build And Push Release
      shell: bash
      run: |
        if [ "${{ steps.docker_release.outcome }}" == "success" ]; then
          DOCKER_REGISTRY="gcr.io/gcpbai"
        else
          DOCKER_REGISTRY="gcr.io/test-bai"
        fi
        docker buildx build --push --platform linux/arm64/v8 --platform linux/amd64 -t ${DOCKER_REGISTRY}/swagger-ui:${{ github.event.inputs.dockerTagVersion }} .
        